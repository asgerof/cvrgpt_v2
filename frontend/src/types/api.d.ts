/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/healthz": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health Check */
        get: operations["health_check"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/readyz": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Readiness Check */
        get: operations["readiness_check"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search Companies */
        get: operations["search_companies"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/company/{cvr}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Company Details */
        get: operations["get_company"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/filings/{cvr}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Company Filings */
        get: operations["list_filings"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/accounts/latest/{cvr}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Latest Accounts */
        get: operations["get_latest_accounts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compare/{cvr}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Compare Company Accounts */
        get: operations["compare_accounts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Company: {
            cvr?: string;
            name?: string;
            address?: string;
            status?: string;
        };
        Filing: {
            id?: string;
            type?: string;
            date?: string;
            url?: string;
        };
        Citation: {
            source?: string;
            url?: string;
            path?: string;
            note?: string;
        };
        AccountsResponse: {
            accounts?: Record<string, never>;
            citations?: components["schemas"]["Citation"][];
        };
        CompareResponse: {
            current_period?: string;
            previous_period?: string;
            key_changes?: Record<string, never>[];
            narrative?: string;
            sources?: components["schemas"]["Citation"][];
        };
    };
    responses: {
        /** @description Authentication required */
        UnauthorizedError: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    detail?: {
                        code?: string;
                        message?: string;
                    };
                };
            };
        };
        /** @description Resource not found */
        NotFoundError: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    detail?: string;
                };
            };
        };
        /** @description Rate limit exceeded */
        RateLimitError: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    detail?: string;
                };
            };
        };
    };
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    health_check: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        status?: string;
                        provider?: string;
                    };
                };
            };
        };
    };
    readiness_check: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Service Ready */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        status?: string;
                    };
                };
            };
            /** @description Service Not Ready */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        detail?: string;
                    };
                };
            };
        };
    };
    search_companies: {
        parameters: {
            query: {
                /** @description Search query */
                q: string;
                /** @description Maximum number of results */
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Search Results */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items?: components["schemas"]["Company"][];
                        citations?: components["schemas"]["Citation"][];
                    };
                };
            };
            401: components["responses"]["UnauthorizedError"];
            429: components["responses"]["RateLimitError"];
        };
    };
    get_company: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description CVR number */
                cvr: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Company Details */
            200: {
                headers: {
                    ETag?: string;
                    "Cache-Control"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Company"];
                };
            };
            /** @description Not Modified */
            304: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            401: components["responses"]["UnauthorizedError"];
            404: components["responses"]["NotFoundError"];
            429: components["responses"]["RateLimitError"];
        };
    };
    list_filings: {
        parameters: {
            query?: {
                /** @description Maximum number of results */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description CVR number */
                cvr: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Company Filings */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        filings?: components["schemas"]["Filing"][];
                        citations?: components["schemas"]["Citation"][];
                    };
                };
            };
            401: components["responses"]["UnauthorizedError"];
            429: components["responses"]["RateLimitError"];
        };
    };
    get_latest_accounts: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description CVR number */
                cvr: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Latest Accounts */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AccountsResponse"];
                };
            };
            401: components["responses"]["UnauthorizedError"];
            404: components["responses"]["NotFoundError"];
            429: components["responses"]["RateLimitError"];
        };
    };
    compare_accounts: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description CVR number */
                cvr: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Account Comparison */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompareResponse"];
                };
            };
            401: components["responses"]["UnauthorizedError"];
            404: components["responses"]["NotFoundError"];
            429: components["responses"]["RateLimitError"];
        };
    };
}
