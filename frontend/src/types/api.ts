/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/metrics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Metrics */
        get: operations["metrics_metrics_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/healthz": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health */
        get: operations["health_healthz_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/readyz": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Readiness */
        get: operations["readiness_readyz_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search */
        get: operations["search_v1_search_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/company/{cvr}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Company */
        get: operations["company_v1_company__cvr__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/filings/{cvr}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Filings */
        get: operations["filings_v1_filings__cvr__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/accounts/latest/{cvr}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Latest Accounts */
        get: operations["latest_accounts_v1_accounts_latest__cvr__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compare/{cvr}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Compare */
        get: operations["compare_v1_compare__cvr__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/compare/{cvr}/export": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Export Comparison
         * @description Export comparison data as CSV or Excel.
         */
        get: operations["export_comparison_v1_compare__cvr__export_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AccountsDelta */
        AccountsDelta: {
            /** Field */
            field: string;
            /** Current Value */
            current_value?: number | null;
            /** Previous Value */
            previous_value?: number | null;
            /** Absolute Change */
            absolute_change?: number | null;
            /** Percentage Change */
            percentage_change?: number | null;
        };
        /** AccountsResponse */
        AccountsResponse: {
            current?: components["schemas"]["AccountsSnapshot"] | null;
            previous?: components["schemas"]["AccountsSnapshot"] | null;
            /** Citations */
            citations?: components["schemas"]["Citation"][];
        };
        /** AccountsSnapshot */
        AccountsSnapshot: {
            period?: components["schemas"]["Period"] | null;
            /** Revenue */
            revenue?: number | null;
            /** Ebit */
            ebit?: number | null;
            /** Net Income */
            net_income?: number | null;
            /** Assets */
            assets?: number | null;
            /** Equity */
            equity?: number | null;
            /** Cash */
            cash?: number | null;
            /** Current Assets */
            current_assets?: number | null;
            /** Current Liabilities */
            current_liabilities?: number | null;
            /** Source Anchors */
            source_anchors?: components["schemas"]["Citation"][];
        };
        /** Address */
        Address: {
            /** Type */
            type?: string | null;
            /** Street */
            street?: string | null;
            /** City */
            city?: string | null;
            /** Zip */
            zip?: string | null;
            /** Country */
            country?: string | null;
        };
        /** Citation */
        Citation: {
            /** Source Id */
            source_id?: string | null;
            /** Url */
            url: string;
            /** Label */
            label: string;
            /** Accessed At */
            accessed_at?: string | null;
            /** Type */
            type?: ("ixbrl" | "pdf" | "api" | "fixtures") | null;
            /** Page */
            page?: number | null;
        };
        /** Company */
        Company: {
            /** Cvr */
            cvr: string;
            /** Name */
            name: string;
            /** Status */
            status?: string | null;
            industry?: components["schemas"]["Industry"] | null;
            /** Addresses */
            addresses?: components["schemas"]["Address"][];
            /** Officers */
            officers?: components["schemas"]["Officer"][];
        };
        /** CompanyResponse */
        CompanyResponse: {
            company: components["schemas"]["Company"];
            /** Citations */
            citations?: components["schemas"]["Citation"][];
        };
        /** CompareResponse */
        CompareResponse: {
            /** Current Period */
            current_period?: string | null;
            /** Previous Period */
            previous_period?: string | null;
            /** Key Changes */
            key_changes?: components["schemas"]["AccountsDelta"][];
            /** Narrative */
            narrative: string;
            /** Sources */
            sources?: components["schemas"]["Citation"][];
        };
        /** Filing */
        Filing: {
            /** Id */
            id: string;
            /** Type */
            type: string;
            /** Date */
            date: string;
            /** Url */
            url: string;
        };
        /** FilingsResponse */
        FilingsResponse: {
            /** Filings */
            filings: components["schemas"]["Filing"][];
            /** Citations */
            citations?: components["schemas"]["Citation"][];
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** Industry */
        Industry: {
            /** Code */
            code?: string | null;
            /** Text */
            text?: string | null;
        };
        /** Officer */
        Officer: {
            /** Role */
            role?: string | null;
            /** Name */
            name?: string | null;
        };
        /** Period */
        Period: {
            /** Start Date */
            start_date?: string | null;
            /** End Date */
            end_date?: string | null;
            /** Year */
            year?: number | null;
        };
        /** SearchItem */
        SearchItem: {
            /** Cvr */
            cvr: string;
            /** Name */
            name: string;
            /** Status */
            status?: string | null;
        };
        /** SearchResponse */
        SearchResponse: {
            /** Items */
            items: components["schemas"]["SearchItem"][];
            /** Total */
            total: number;
            /** Limit */
            limit: number;
            /** Offset */
            offset: number;
            /** Next Offset */
            next_offset: number | null;
            /** Citations */
            citations?: components["schemas"]["Citation"][];
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    metrics_metrics_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    health_healthz_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
        };
    };
    readiness_readyz_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
        };
    };
    search_v1_search_get: {
        parameters: {
            query: {
                q: string;
                limit?: number;
                offset?: number;
            };
            header?: {
                "X-API-Key"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SearchResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    company_v1_company__cvr__get: {
        parameters: {
            query?: never;
            header?: {
                "X-API-Key"?: string | null;
            };
            path: {
                cvr: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    filings_v1_filings__cvr__get: {
        parameters: {
            query?: {
                limit?: number;
            };
            header?: {
                "X-API-Key"?: string | null;
            };
            path: {
                cvr: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FilingsResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    latest_accounts_v1_accounts_latest__cvr__get: {
        parameters: {
            query?: never;
            header?: {
                "X-API-Key"?: string | null;
            };
            path: {
                cvr: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AccountsResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    compare_v1_compare__cvr__get: {
        parameters: {
            query?: never;
            header?: {
                "X-API-Key"?: string | null;
            };
            path: {
                cvr: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompareResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    export_comparison_v1_compare__cvr__export_get: {
        parameters: {
            query?: {
                format?: string;
            };
            header?: {
                "X-API-Key"?: string | null;
            };
            path: {
                cvr: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
